$version Generated by VerilatedVcd $end
$timescale 1ns $end
 $scope module $rootio $end
 $upscope $end
 $scope module alu_tb $end
  $var wire 32 + N [31:0] $end
  $var wire 8 # A [7:0] $end
  $var wire 8 $ B [7:0] $end
  $var wire 4 % sel [3:0] $end
  $var wire 8 & result [7:0] $end
  $var wire 1 ' overflow $end
  $var wire 1 ( negative $end
  $var wire 1 ) zero $end
  $scope module dut $end
   $var wire 32 + N [31:0] $end
   $var wire 8 # A [7:0] $end
   $var wire 8 $ B [7:0] $end
   $var wire 4 % sel [3:0] $end
   $var wire 8 & result [7:0] $end
   $var wire 1 ' overflow $end
   $var wire 1 ) zero $end
   $var wire 1 ( negative $end
  $upscope $end
  $scope module unnamedblk1 $end
   $var wire 32 * i [31:0] $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b11111100 #
b11111111 $
b0000 %
b11111011 &
1'
1(
0)
b00000000000000000000000000000000 *
b00000000000000000000000000001000 +
#1
b11111111 #
b00111111 $
b0001 %
b11000000 &
0'
b00000000000000000000000000000001 *
#2
b00110110 #
b10100010 $
b0010 %
b00000000 &
0(
1)
b00000000000000000000000000000010 *
#3
b10101100 #
b00001011 $
b0011 %
b00000000000000000000000000000011 *
#4
b11010000 #
b00001100 $
b0100 %
b00000000000000000000000000000100 *
#5
b11111110 #
b00001001 $
b0101 %
b11111111 &
1(
0)
b00000000000000000000000000000101 *
#6
b10010100 #
b10110001 $
b0110 %
b01101111 &
0(
b00000000000000000000000000000110 *
#7
b10100101 #
b00000110 $
b0111 %
b01011000 &
b00000000000000000000000000000111 *
#8
b00010111 #
b11100011 $
b1000 %
b11110100 &
1(
b00000000000000000000000000001000 *
#9
b10100101 #
b11001000 $
b1001 %
b10010010 &
b00000000000000000000000000001001 *
#10
b00000000000000000000000000001010 *
