$version Generated by VerilatedVcd $end
$timescale 1ns $end
 $scope module $rootio $end
 $upscope $end
 $scope module ripple_adder_tb $end
  $var wire 32 9 N [31:0] $end
  $var wire 4 # x [3:0] $end
  $var wire 4 $ y [3:0] $end
  $var wire 1 % Ci $end
  $var wire 4 / S [3:0] $end
  $var wire 1 0 Co $end
  $scope module dut $end
   $var wire 32 9 N [31:0] $end
   $var wire 4 # x [3:0] $end
   $var wire 4 $ y [3:0] $end
   $var wire 1 % Ci $end
   $var wire 4 / S [3:0] $end
   $var wire 1 0 Co $end
   $var wire 5 1 carry [4:0] $end
   $scope module ripple_carry_adder[0] $end
    $scope module FA $end
     $var wire 1 & x $end
     $var wire 1 ' y $end
     $var wire 1 % Ci $end
     $var wire 1 2 S $end
     $var wire 1 3 Co $end
    $upscope $end
   $upscope $end
   $scope module ripple_carry_adder[1] $end
    $scope module FA $end
     $var wire 1 ( x $end
     $var wire 1 ) y $end
     $var wire 1 3 Ci $end
     $var wire 1 4 S $end
     $var wire 1 5 Co $end
    $upscope $end
   $upscope $end
   $scope module ripple_carry_adder[2] $end
    $scope module FA $end
     $var wire 1 * x $end
     $var wire 1 + y $end
     $var wire 1 5 Ci $end
     $var wire 1 6 S $end
     $var wire 1 7 Co $end
    $upscope $end
   $upscope $end
   $scope module ripple_carry_adder[3] $end
    $scope module FA $end
     $var wire 1 , x $end
     $var wire 1 - y $end
     $var wire 1 7 Ci $end
     $var wire 1 8 S $end
     $var wire 1 0 Co $end
    $upscope $end
   $upscope $end
  $upscope $end
  $scope module unnamedblk1 $end
   $var wire 32 . i [31:0] $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b1100 #
b1111 $
1%
0&
1'
0(
1)
1*
1+
1,
1-
b00000000000000000000000000000000 .
b1100 /
10
b11111 1
02
13
04
15
16
17
18
b00000000000000000000000000000100 9
#1
b1111 #
b0110 $
0%
1&
0'
1(
0-
b00000000000000000000000000000001 .
b0101 /
b11100 1
12
03
08
#2
b1100 #
b1011 $
0&
1'
0(
0+
1-
b00000000000000000000000000000010 .
b0111 /
b10000 1
14
05
07
#3
b1110 $
1%
0'
1+
b00000000000000000000000000000011 .
b1011 /
b11001 1
06
17
18
#4
b0100 #
b0001 $
1'
0)
0+
0,
0-
b00000000000000000000000000000100 .
b0110 /
00
b00011 1
02
13
16
07
08
#5
b0110 #
b0111 $
1(
1)
1+
b00000000000000000000000000000101 .
b1110 /
b01111 1
15
17
18
#6
b0101 #
b1000 $
1&
0'
0(
0)
0+
1-
b00000000000000000000000000000110 .
b00011 1
05
07
#7
b1010 #
b1011 $
0&
1'
1(
1)
0*
1,
b00000000000000000000000000000111 .
b0110 /
10
b10111 1
15
08
#8
b0011 #
b0111 $
0%
1&
1+
0,
0-
b00000000000000000000000000001000 .
b1010 /
00
b01110 1
06
17
18
#9
b0001 #
b0110 $
0'
0(
b00000000000000000000000000001001 .
b0111 /
b00000 1
12
03
05
16
07
08
#10
b00000000000000000000000000001010 .
